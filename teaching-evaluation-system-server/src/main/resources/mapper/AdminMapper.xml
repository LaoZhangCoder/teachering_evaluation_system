<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="AdminModel">
    <resultMap id="BaseResultMap" type="AdminModel">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="admin_name" property="adminName" jdbcType="VARCHAR"/>
        <result column="admin_id" property="adminId" jdbcType="VARCHAR"/>
        <result column="admin_password" property="adminPassword" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="role_id" property="roleId" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, admin_name, admin_id, admin_password, created_at,updated_at,role_id
  </sql>
    <sql id="criteria">
        <where>
            <if test="userName != null">AND `admin_name` = #{userName}</if>
            <if test="adminId != null">AND `admin_id` = #{adminId}</if>
            <if test="adminPassword != null">AND `admin_password` = #{adminPassword}</if>
        </where>
    </sql>
    <sql id="table_name">admin</sql>

    <select id="findByUniqueIndex" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from admin
        <include refid="criteria" />
    </select>
    <insert id="create" parameterType="AdminModel">
        insert  into admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test=" adminName != null">
                admin_name,
            </if>
            <if test=" adminId != null">
                admin_id,
            </if>
            <if test=" adminPassword != null">
                admin_password,
            </if>
            <if test=" roleId != null">
                role_id,
            </if>
            <if test=" createdAt != null">
                created_at,
            </if>
            <if test=" updatedAt != null">
                updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="adminName != null">
                #{adminName,jdbcType=VARCHAR},
            </if>
            <if test="adminId != null">
                #{adminId,jdbcType=VARCHAR},
            </if>
            <if test="adminPassword != null">
                #{adminPassword,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="paging" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from <include refid="table_name" />
        LIMIT #{offset}, #{limit}
    </select>
    <select id="count" resultType="long">
        select count(*) from <include refid="table_name"/>
    </select>
    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="table_name"/>
    </select>
    <update id="update" parameterType="UserActivationModel">
        update
        <include refid="table_name" />
        <set>
            <if test="adminName != null">
              admin_name= #{adminName,jdbcType=VARCHAR},
            </if>
            <if test="adminId != null">
                admin_id=#{adminId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id=#{roleId,jdbcType=BIGINT},
            </if>
            <if test="createdAt != null">
                create_at=#{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
               updated_at= #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <delete id="delete" parameterType="long">
        delete from <include refid="table_name"/> where id=#{id}
    </delete>
</mapper>
